{
  "openapi": "3.1.0",
  "info": {
    "title": "0x API Analytics Proxy",
    "description": "Secure proxy for ChatGPT to query 0x API metrics from Metabase",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://mb-gpt-2025-hackathon.onrender.com",
      "description": "Production"
    }
  ],
  "paths": {
    "/answer": {
      "post": {
        "summary": "Query Metabase Data",
        "description": "Execute an allowlisted Metabase query with optional parameters",
        "operationId": "queryMetabase",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerReq"
              },
              "examples": {
                "llm_totals": {
                  "summary": "0x API Monthly Totals",
                  "value": {
                    "question": "llm_totals",
                    "params": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response with query results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerResp"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid bearer token"
          },
          "400": {
            "description": "Bad request - invalid parameters or question name"
          },
          "500": {
            "description": "Server error - Metabase connection or query error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AnswerReq": {
        "type": "object",
        "required": ["question"],
        "properties": {
          "question": {
            "type": "string",
            "enum": ["llm_totals"],
            "description": "The name of the allowlisted Metabase query to execute. Use 'llm_totals' to retrieve all 0x API metrics (no parameters required)."
          }
        }
      },
      "AnswerResp": {
        "type": "object",
        "required": ["summary", "columns", "rows"],
        "properties": {
          "summary": {
            "type": "string",
            "description": "Human-readable summary of the query results",
            "example": "Returned 12 months of data with 33 metrics including volume, fees, margin, transaction counts across API, Swap, RFQ, Gasless, and Matcha products."
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of column names from the query results",
            "example": ["timestamp", "volume", "fees", "margin", "api_txs", "swap_volume", "swap_fees", "rfq_volume", "rfq_fees", "gasless_volume", "matcha_volume"]
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {}
            },
            "description": "Array of data rows, each row is an array of values corresponding to columns",
            "example": [
              ["2025-09-01", 4768076878.66, 1145587.23, 2.40, 18019020, 370213255.87, 295505.80, 345748030.35, 244450.08, 275850244.76, 991447970.90]
            ]
          },
          "truncated": {
            "type": "boolean",
            "description": "Whether the results were truncated due to row limit",
            "example": false,
            "default": false
          },
          "meta": {
            "type": "object",
            "description": "Metadata about the query execution",
            "properties": {
              "card_id": {
                "type": "integer",
                "description": "The Metabase card ID that was queried"
              },
              "cached": {
                "type": "boolean",
                "description": "Whether this response was served from cache"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Bearer token authentication. Use the ACTION_BEARER token configured in your deployment."
      }
    }
  }
}
